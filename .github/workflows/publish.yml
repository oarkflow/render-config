name: Publish NPM Package

on:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install

      - name: Configure npm authentication
        run: |
          # Check if NPM_TOKEN is available (safe way, don't print it)
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "NPM_TOKEN is not set"
            exit 1
          else
            echo "NPM_TOKEN is set"
          fi

          # Set up .npmrc with the token
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}

      - name: Set Git identity
        run: |
          git config --global user.email "suneelsapkota9@gmail.com"   # Replace with your email
          git config --global user.name "sunil-9"                    # Replace with your name

      - name: Check for changes
        run: |
          git fetch --prune --unshallow
          git diff --exit-code || echo "Changes detected"

      - name: Bump version based on commit messages and publish
        run: |
          # Get the latest commit message
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)

          # Determine version bump based on the commit message
          if [[ "$COMMIT_MESSAGE" =~ ^.*"feat":.* ]]; then
            VERSION=$(npm version minor)   # Automatically updates version and creates a Git tag
            echo "Bumping version to minor: $VERSION"
          elif [[ "$COMMIT_MESSAGE" =~ ^.*"fix":.* ]]; then
            VERSION=$(npm version patch)   # Automatically updates version and creates a Git tag
            echo "Bumping version to patch: $VERSION"
          else
            VERSION=$(npm version patch)   # Automatically updates version and creates a Git tag
            echo "Bumping version to patch (default): $VERSION"
          fi

          # Publish the package to npm
          npm publish --access public

          # Optionally, create a Git tag and push it
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin --tags